{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { AuthContext } from \"../context/AuthContext\";\nimport axios from 'axios';\nimport { API_URL } from \"../config\";\nimport { getConversationsList, sendDirectMessage, getMessages } from \"../services/api\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatListScreen = function ChatListScreen(_ref) {\n  var _route$params4, _route$params5, _route$params6;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useContext = useContext(AuthContext),\n    userInfo = _useContext.userInfo,\n    requireLogin = _useContext.requireLogin;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    conversations = _useState2[0],\n    setConversations = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showTrialModal = _useState8[0],\n    setShowTrialModal = _useState8[1];\n  var _useState9 = useState((userInfo == null ? void 0 : userInfo.phone) || ''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    phone = _useState10[0],\n    setPhone = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    phoneError = _useState12[0],\n    setPhoneError = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isStartingTrial = _useState14[0],\n    setIsStartingTrial = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    trialError = _useState16[0],\n    setTrialError = _useState16[1];\n  var requestedTrialRef = useRef(false);\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showComposeModal = _useState18[0],\n    setShowComposeModal = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    newMessage = _useState20[0],\n    setNewMessage = _useState20[1];\n  var _useState21 = useState(null),\n    _useState22 = _slicedToArray(_useState21, 2),\n    selectedUser = _useState22[0],\n    setSelectedUser = _useState22[1];\n  var _useState23 = useState(null),\n    _useState24 = _slicedToArray(_useState23, 2),\n    selectedPost = _useState24[0],\n    setSelectedPost = _useState24[1];\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function () {\n      if (userInfo) {\n        fetchConversations();\n      }\n    });\n    return unsubscribe;\n  }, [navigation, route]);\n  useEffect(function () {\n    var _route$params, _route$params2, _route$params3;\n    if ((_route$params = route.params) != null && _route$params.selectedUser && (_route$params2 = route.params) != null && _route$params2.selectedPost && (_route$params3 = route.params) != null && _route$params3.showComposeMessage) {\n      setSelectedUser(route.params.selectedUser);\n      setSelectedPost(route.params.selectedPost);\n      setShowComposeModal(true);\n    }\n  }, [(_route$params4 = route.params) == null ? void 0 : _route$params4.selectedUser, (_route$params5 = route.params) == null ? void 0 : _route$params5.selectedPost, (_route$params6 = route.params) == null ? void 0 : _route$params6.showComposeMessage]);\n  useEffect(function () {\n    if (userInfo) {\n      fetchConversations();\n    }\n  }, [userInfo]);\n  var checkAccess = function checkAccess() {\n    return !!userInfo;\n  };\n  var fetchConversations = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        try {\n          console.log('Attempting to fetch conversations from API...');\n          var apiConversations = yield getConversationsList();\n          if (apiConversations && apiConversations.length > 0) {\n            console.log('Successfully fetched conversations from API');\n            var formattedConversations = apiConversations.map(function (message) {\n              var otherParty = message.sender._id === userInfo._id ? message.receiver : message.sender;\n              return {\n                _id: `${otherParty._id}_${message.post._id}`,\n                user: otherParty,\n                post: message.post,\n                lastMessage: message,\n                messages: [message],\n                unreadCount: message.receiver._id === userInfo._id && !message.isRead ? 1 : 0\n              };\n            });\n            formattedConversations.sort(function (a, b) {\n              var _b$lastMessage, _a$lastMessage;\n              return new Date((_b$lastMessage = b.lastMessage) == null ? void 0 : _b$lastMessage.createdAt) - new Date((_a$lastMessage = a.lastMessage) == null ? void 0 : _a$lastMessage.createdAt);\n            });\n            setConversations(formattedConversations);\n            setLoading(false);\n            setRefreshing(false);\n            return;\n          }\n        } catch (apiError) {\n          console.log('Error fetching from API, falling back to local storage:', apiError);\n        }\n        var savedConversations = yield AsyncStorage.getItem('demo_conversations');\n        if (savedConversations) {\n          var parsedConversations = JSON.parse(savedConversations);\n          if (parsedConversations && parsedConversations.length > 0) {\n            setConversations(parsedConversations);\n            setLoading(false);\n            setRefreshing(false);\n            return;\n          }\n        }\n        var demoConversations = [{\n          _id: 'demo1',\n          user: {\n            _id: 'user1',\n            name: 'John Doe',\n            profileImage: 'https://randomuser.me/api/portraits/men/32.jpg'\n          },\n          lastMessage: {\n            content: 'This is a demo conversation.',\n            createdAt: new Date(),\n            sender: {\n              _id: 'user1',\n              name: 'John Doe'\n            },\n            recipient: {\n              _id: userInfo._id,\n              name: userInfo.name\n            }\n          },\n          post: {\n            _id: 'post1',\n            title: 'Basketball game this weekend'\n          },\n          unreadCount: 1,\n          messages: [{\n            _id: `msg_${Date.now()}`,\n            content: 'This is a demo conversation.',\n            createdAt: new Date(),\n            sender: {\n              _id: 'user1',\n              name: 'John Doe'\n            },\n            recipient: {\n              _id: userInfo._id,\n              name: userInfo.name\n            },\n            post: {\n              _id: 'post1',\n              title: 'Basketball game this weekend'\n            }\n          }]\n        }];\n        setConversations(demoConversations);\n        yield AsyncStorage.setItem('demo_conversations', JSON.stringify(demoConversations));\n      } catch (error) {\n        console.log('Error fetching conversations:', error);\n        Alert.alert('Error', 'Failed to load conversations. Please try again later.');\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchConversations() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRefresh = function handleRefresh() {\n    setRefreshing(true);\n    fetchConversations();\n  };\n  var goToChat = function () {\n    var _ref3 = _asyncToGenerator(function* (conversation) {\n      setSelectedUser(conversation.user);\n      setSelectedPost(conversation.post);\n      setNewMessage('');\n      try {\n        var messageHistory = '';\n        try {\n          console.log('Fetching messages for conversation with:', conversation.user._id);\n          var response = yield getMessages(conversation.user._id);\n          if (response.success && response.data && response.data.length > 0) {\n            var existingConvIndex = conversations.findIndex(function (c) {\n              return c._id === conversation._id;\n            });\n            if (existingConvIndex !== -1) {\n              var updatedConversations = _toConsumableArray(conversations);\n              updatedConversations[existingConvIndex].messages = response.data;\n              setConversations(updatedConversations);\n            }\n            messageHistory = response.data.slice(0, 5).map(function (msg) {\n              var sender = msg.sender._id === userInfo._id ? 'You' : msg.sender.name || 'User';\n              return `${sender}: ${msg.content}`;\n            }).join('\\n\\n');\n          }\n        } catch (apiError) {\n          console.log('Error fetching messages from API:', apiError);\n          if (conversation.messages && conversation.messages.length > 0) {\n            messageHistory = conversation.messages.slice(0, 5).map(function (msg) {\n              var sender = msg.sender._id === userInfo._id ? 'You' : msg.sender.name || 'User';\n              return `${sender}: ${msg.content}`;\n            }).join('\\n\\n');\n          } else {\n            messageHistory = 'No message history available.';\n          }\n        }\n        Alert.alert(`Conversation with ${conversation.user.name}`, `About: ${conversation.post.title}`, [{\n          text: 'View Messages',\n          onPress: function onPress() {\n            Alert.alert('Message History', messageHistory || 'No message history available.', [{\n              text: 'Reply',\n              onPress: function onPress() {\n                return setShowComposeModal(true);\n              }\n            }, {\n              text: 'Close',\n              style: 'cancel'\n            }]);\n          }\n        }, {\n          text: 'Send Message',\n          onPress: function onPress() {\n            return setShowComposeModal(true);\n          }\n        }, {\n          text: 'Cancel',\n          style: 'cancel'\n        }]);\n      } catch (error) {\n        console.log('Error in goToChat:', error);\n        Alert.alert(`Conversation with ${conversation.user.name}`, `About: ${conversation.post.title}`, [{\n          text: 'Send Message',\n          onPress: function onPress() {\n            return setShowComposeModal(true);\n          }\n        }, {\n          text: 'Cancel',\n          style: 'cancel'\n        }]);\n      }\n    });\n    return function goToChat(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleSendNewMessage = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!newMessage.trim() || !selectedUser || !selectedPost) {\n        return;\n      }\n      try {\n        var messageData = {\n          recipient: selectedUser._id,\n          content: newMessage.trim(),\n          post: selectedPost._id\n        };\n        console.log('Sending message via API:', messageData);\n        var response;\n        try {\n          response = yield sendDirectMessage(messageData);\n          console.log('API response:', response);\n        } catch (apiError) {\n          console.log('Error sending via API, using local fallback:', apiError);\n          response = {\n            _id: `local_msg_${Date.now()}`,\n            content: newMessage.trim(),\n            createdAt: new Date().toISOString(),\n            sender: {\n              _id: userInfo._id,\n              name: userInfo.name,\n              email: userInfo.email\n            },\n            receiver: selectedUser,\n            post: selectedPost\n          };\n          var savedConversations = yield AsyncStorage.getItem('demo_conversations');\n          var localConversations = savedConversations ? JSON.parse(savedConversations) : [];\n          var _conversationId = `${selectedUser._id}_${selectedPost._id}`;\n          var _existingConvIndex = localConversations.findIndex(function (c) {\n            return c.user._id === selectedUser._id && c.post._id === selectedPost._id;\n          });\n          if (_existingConvIndex !== -1) {\n            localConversations[_existingConvIndex].lastMessage = response;\n            localConversations[_existingConvIndex].messages.unshift(response);\n          } else {\n            var newConversation = {\n              _id: _conversationId,\n              user: selectedUser,\n              lastMessage: response,\n              messages: [response],\n              post: selectedPost,\n              unreadCount: 0\n            };\n            localConversations.unshift(newConversation);\n          }\n          yield AsyncStorage.setItem('demo_conversations', JSON.stringify(localConversations));\n        }\n        var conversationId = `${selectedUser._id}_${selectedPost._id}`;\n        var existingConvIndex = conversations.findIndex(function (c) {\n          return c.user._id === selectedUser._id && c.post._id === selectedPost._id;\n        });\n        var updatedConversations = _toConsumableArray(conversations);\n        if (existingConvIndex !== -1) {\n          updatedConversations[existingConvIndex] = _objectSpread(_objectSpread({}, updatedConversations[existingConvIndex]), {}, {\n            lastMessage: response,\n            messages: [response].concat(_toConsumableArray(updatedConversations[existingConvIndex].messages || []))\n          });\n        } else {\n          var _newConversation = {\n            _id: conversationId,\n            user: selectedUser,\n            lastMessage: response,\n            messages: [response],\n            post: selectedPost,\n            unreadCount: 0\n          };\n          updatedConversations = [_newConversation].concat(_toConsumableArray(updatedConversations));\n        }\n        setConversations(updatedConversations);\n        setNewMessage('');\n        setShowComposeModal(false);\n        Alert.alert('Message Sent', `Your message to ${selectedUser.name} has been sent.`, [{\n          text: 'OK'\n        }]);\n      } catch (error) {\n        console.log('Error saving message:', error);\n        Alert.alert('Error', 'Failed to send message. Please try again.');\n      }\n    });\n    return function handleSendNewMessage() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var resetMessages = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem('demo_conversations');\n        Alert.alert('Messages Reset', 'Local message cache has been cleared. Messages from the server may still exist. Pull down to refresh and see the changes.', [{\n          text: 'OK',\n          onPress: function onPress() {\n            return fetchConversations();\n          }\n        }]);\n      } catch (error) {\n        console.log('Error resetting messages:', error);\n        Alert.alert('Error', 'Failed to reset messages.');\n      }\n    });\n    return function resetMessages() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  if (!userInfo) {\n    return _jsxs(View, {\n      style: styles.centeredContainer,\n      children: [_jsx(Ionicons, {\n        name: \"chatbubbles-outline\",\n        size: 70,\n        color: \"#0066CC\"\n      }), _jsx(Text, {\n        style: styles.noticeTitle,\n        children: \"Login Required\"\n      }), _jsx(Text, {\n        style: styles.noticeText,\n        children: \"Please log in to access your conversations\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: function onPress() {\n          return navigation.navigate('Login');\n        },\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Login\"\n        })\n      })]\n    });\n  }\n  var renderEmptyState = function renderEmptyState() {\n    return _jsxs(View, {\n      style: styles.emptyContainer,\n      children: [_jsx(Ionicons, {\n        name: \"chatbubbles-outline\",\n        size: 70,\n        color: \"#ccc\"\n      }), _jsx(Text, {\n        style: styles.emptyTitle,\n        children: \"No Conversations Yet\"\n      }), _jsx(Text, {\n        style: styles.emptyText,\n        children: \"You don't have any messages yet. Find a post you're interested in and start a conversation!\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.findPostsButton,\n        onPress: function onPress() {\n          return navigation.navigate('Home');\n        },\n        children: _jsx(Text, {\n          style: styles.findPostsButtonText,\n          children: \"Find Posts\"\n        })\n      })]\n    });\n  };\n  var renderConversationItem = function renderConversationItem(_ref6) {\n    var _item$lastMessage, _item$lastMessage$sen, _item$lastMessage2, _item$lastMessage3, _item$user, _item$user2, _item$lastMessage4, _item$post;\n    var item = _ref6.item;\n    var isUnread = item.unreadCount > 0;\n    var isSenderMe = ((_item$lastMessage = item.lastMessage) == null ? void 0 : (_item$lastMessage$sen = _item$lastMessage.sender) == null ? void 0 : _item$lastMessage$sen._id) === (userInfo == null ? void 0 : userInfo._id);\n    var messagePreview = isSenderMe ? `You: ${(_item$lastMessage2 = item.lastMessage) == null ? void 0 : _item$lastMessage2.content}` : (_item$lastMessage3 = item.lastMessage) == null ? void 0 : _item$lastMessage3.content;\n    return _jsxs(TouchableOpacity, {\n      style: [styles.conversationItem, isUnread && styles.unreadItem],\n      onPress: function onPress() {\n        return goToChat(item);\n      },\n      children: [_jsx(View, {\n        style: styles.avatarContainer,\n        children: (_item$user = item.user) != null && _item$user.profileImage ? _jsx(Image, {\n          source: {\n            uri: item.user.profileImage\n          },\n          style: styles.avatar\n        }) : _jsx(View, {\n          style: styles.avatarPlaceholder,\n          children: _jsx(Ionicons, {\n            name: \"person\",\n            size: 24,\n            color: \"#ccc\"\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.conversationContent,\n        children: [_jsxs(View, {\n          style: styles.conversationHeader,\n          children: [_jsx(Text, {\n            style: [styles.userName, isUnread && styles.unreadText],\n            children: ((_item$user2 = item.user) == null ? void 0 : _item$user2.name) || 'Unknown User'\n          }), _jsx(Text, {\n            style: styles.timestamp,\n            children: new Date((_item$lastMessage4 = item.lastMessage) == null ? void 0 : _item$lastMessage4.createdAt).toLocaleDateString()\n          })]\n        }), _jsxs(Text, {\n          style: styles.postTitle,\n          numberOfLines: 1,\n          children: [\"Re: \", ((_item$post = item.post) == null ? void 0 : _item$post.title) || 'Unknown Post']\n        }), _jsx(Text, {\n          style: [styles.messagePreview, isUnread && styles.unreadText],\n          numberOfLines: 1,\n          children: messagePreview || 'No messages yet'\n        })]\n      }), isUnread && _jsx(View, {\n        style: styles.unreadBadge,\n        children: _jsx(Text, {\n          style: styles.unreadBadgeText,\n          children: item.unreadCount\n        })\n      })]\n    });\n  };\n  var renderComposeModal = function renderComposeModal() {\n    return _jsx(Modal, {\n      visible: showComposeModal,\n      transparent: true,\n      animationType: \"slide\",\n      onRequestClose: function onRequestClose() {\n        return setShowComposeModal(false);\n      },\n      children: _jsx(KeyboardAwareScrollView, {\n        contentContainerStyle: styles.modalOverlay,\n        keyboardShouldPersistTaps: \"handled\",\n        children: _jsxs(View, {\n          style: styles.composeModalContent,\n          children: [_jsxs(View, {\n            style: styles.composeModalHeader,\n            children: [_jsxs(Text, {\n              style: styles.composeModalTitle,\n              children: [\"Message to \", selectedUser == null ? void 0 : selectedUser.name]\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setShowComposeModal(false);\n              },\n              children: _jsx(Ionicons, {\n                name: \"close\",\n                size: 24,\n                color: \"#333\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.composeModalBody,\n            children: [selectedPost && _jsxs(View, {\n              style: styles.postInfo,\n              children: [_jsx(Text, {\n                style: styles.postInfoLabel,\n                children: \"Regarding:\"\n              }), _jsx(Text, {\n                style: styles.postInfoTitle,\n                children: selectedPost.title\n              })]\n            }), _jsx(TextInput, {\n              style: styles.composeInput,\n              placeholder: \"Type your message here...\",\n              value: newMessage,\n              onChangeText: setNewMessage,\n              multiline: true,\n              numberOfLines: 4,\n              textAlignVertical: \"top\"\n            }), _jsx(TouchableOpacity, {\n              style: [styles.sendButton, !newMessage.trim() && styles.sendButtonDisabled],\n              onPress: handleSendNewMessage,\n              disabled: !newMessage.trim(),\n              children: _jsx(Text, {\n                style: styles.sendButtonText,\n                children: \"Send Message\"\n              })\n            })]\n          })]\n        })\n      })\n    });\n  };\n  if (loading && !refreshing) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0066CC\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading conversations...\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [renderComposeModal(), _jsx(View, {\n      style: styles.header\n    }), _jsx(FlatList, {\n      data: conversations,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: renderConversationItem,\n      onRefresh: handleRefresh,\n      refreshing: refreshing,\n      ListEmptyComponent: renderEmptyState,\n      contentContainerStyle: conversations.length === 0 ? {\n        flex: 1\n      } : null\n    }), _jsxs(TouchableOpacity, {\n      style: styles.resetButton,\n      onPress: function onPress() {\n        Alert.alert('Reset Messages', 'This will clear all messages for all users. Are you sure?', [{\n          text: 'Cancel',\n          style: 'cancel'\n        }, {\n          text: 'Reset',\n          onPress: resetMessages,\n          style: 'destructive'\n        }]);\n      },\n      children: [_jsx(Ionicons, {\n        name: \"trash\",\n        size: 20,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.resetButtonText,\n        children: \"Reset Messages\"\n      })]\n    }), \" */}\"]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f8f8'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0'\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 12,\n    fontSize: 16,\n    color: '#666'\n  },\n  conversationItem: {\n    flexDirection: 'row',\n    padding: 16,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0'\n  },\n  unreadItem: {\n    backgroundColor: '#f0f7ff'\n  },\n  avatarContainer: {\n    marginRight: 12\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25\n  },\n  avatarPlaceholder: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  conversationContent: {\n    flex: 1\n  },\n  conversationHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 4\n  },\n  userName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333'\n  },\n  timestamp: {\n    fontSize: 12,\n    color: '#888'\n  },\n  postTitle: {\n    fontSize: 14,\n    color: '#0066CC',\n    marginBottom: 4\n  },\n  messagePreview: {\n    fontSize: 14,\n    color: '#666'\n  },\n  unreadText: {\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  unreadBadge: {\n    backgroundColor: '#0066CC',\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 8,\n    alignSelf: 'center'\n  },\n  unreadBadgeText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  centeredContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  noticeTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 16,\n    marginBottom: 8,\n    color: '#333'\n  },\n  noticeText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 24,\n    color: '#666',\n    lineHeight: 22\n  },\n  loginButton: {\n    backgroundColor: '#0066CC',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginTop: 8\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  trialButton: {\n    backgroundColor: '#0066CC',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginBottom: 12,\n    width: '80%',\n    alignItems: 'center'\n  },\n  trialButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  upgradeButton: {\n    borderWidth: 1,\n    borderColor: '#0066CC',\n    backgroundColor: 'transparent',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    width: '80%',\n    alignItems: 'center'\n  },\n  upgradeButtonText: {\n    color: '#0066CC',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  emptyTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 16,\n    marginBottom: 8,\n    color: '#333'\n  },\n  emptyText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 24,\n    color: '#666',\n    lineHeight: 22\n  },\n  findPostsButton: {\n    backgroundColor: '#0066CC',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8\n  },\n  findPostsButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  newChatButton: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20,\n    backgroundColor: '#0066CC',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    elevation: 3\n  },\n  newChatButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    marginLeft: 4\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: 20\n  },\n  trialModalContent: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    width: '85%',\n    maxWidth: 400,\n    overflow: 'hidden',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4\n  },\n  trialModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  trialModalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  trialModalBody: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  trialIcon: {\n    marginBottom: 15\n  },\n  trialTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 10\n  },\n  trialDescription: {\n    fontSize: 16,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20,\n    lineHeight: 24\n  },\n  benefitsContainer: {\n    marginBottom: 20\n  },\n  benefitRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4\n  },\n  benefitText: {\n    fontSize: 16,\n    color: '#333',\n    marginLeft: 8\n  },\n  phoneInputContainer: {\n    width: '100%',\n    marginBottom: 20\n  },\n  phoneLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: '#333'\n  },\n  phoneInputWrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12\n  },\n  phoneIcon: {\n    marginRight: 8\n  },\n  phoneInput: {\n    flex: 1,\n    fontSize: 16\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 12,\n    marginTop: 5\n  },\n  startTrialButton: {\n    backgroundColor: '#0066CC',\n    padding: 12,\n    borderRadius: 8,\n    flex: 1.5,\n    alignItems: 'center'\n  },\n  startTrialButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  termsText: {\n    fontSize: 12,\n    color: '#666',\n    textAlign: 'center',\n    marginTop: 10\n  },\n  statusBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f0f0f0',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '600',\n    marginLeft: 4\n  },\n  composeModalContent: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    width: '100%',\n    maxWidth: 400,\n    overflow: 'hidden',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 4\n  },\n  composeModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  composeModalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  composeModalBody: {\n    padding: 20\n  },\n  postInfo: {\n    marginBottom: 20,\n    width: '100%',\n    padding: 12,\n    backgroundColor: '#f8f8f8',\n    borderRadius: 8,\n    borderLeftWidth: 3,\n    borderLeftColor: '#0066CC'\n  },\n  postInfoLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 4,\n    color: '#666'\n  },\n  postInfoTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#0066CC'\n  },\n  composeInput: {\n    width: '100%',\n    height: 120,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    marginBottom: 20,\n    fontSize: 16\n  },\n  sendButton: {\n    backgroundColor: '#0066CC',\n    padding: 12,\n    borderRadius: 8,\n    width: '100%',\n    alignItems: 'center'\n  },\n  sendButtonDisabled: {\n    backgroundColor: '#cccccc'\n  },\n  sendButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  resetButton: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    backgroundColor: '#FF3B30',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    elevation: 3\n  },\n  resetButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    marginLeft: 4\n  }\n});\nexport default ChatListScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","View","Text","StyleSheet","FlatList","TouchableOpacity","ActivityIndicator","Alert","Image","Modal","TextInput","Ionicons","AuthContext","axios","API_URL","getConversationsList","sendDirectMessage","getMessages","KeyboardAwareScrollView","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ChatListScreen","_ref","_route$params4","_route$params5","_route$params6","navigation","route","_useContext","userInfo","requireLogin","_useState","_useState2","_slicedToArray","conversations","setConversations","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","_useState7","_useState8","showTrialModal","setShowTrialModal","_useState9","phone","_useState10","setPhone","_useState11","_useState12","phoneError","setPhoneError","_useState13","_useState14","isStartingTrial","setIsStartingTrial","_useState15","_useState16","trialError","setTrialError","requestedTrialRef","_useState17","_useState18","showComposeModal","setShowComposeModal","_useState19","_useState20","newMessage","setNewMessage","_useState21","_useState22","selectedUser","setSelectedUser","_useState23","_useState24","selectedPost","setSelectedPost","unsubscribe","addListener","fetchConversations","_route$params","_route$params2","_route$params3","params","showComposeMessage","checkAccess","_ref2","_asyncToGenerator","console","log","apiConversations","length","formattedConversations","map","message","otherParty","sender","_id","receiver","post","user","lastMessage","messages","unreadCount","isRead","sort","a","b","_b$lastMessage","_a$lastMessage","Date","createdAt","apiError","savedConversations","getItem","parsedConversations","JSON","parse","demoConversations","name","profileImage","content","recipient","title","now","setItem","stringify","error","alert","apply","arguments","handleRefresh","goToChat","_ref3","conversation","messageHistory","response","success","data","existingConvIndex","findIndex","c","updatedConversations","_toConsumableArray","slice","msg","join","text","onPress","style","_x","handleSendNewMessage","_ref4","trim","messageData","toISOString","email","localConversations","conversationId","unshift","newConversation","_objectSpread","concat","resetMessages","_ref5","removeItem","styles","centeredContainer","children","size","color","noticeTitle","noticeText","loginButton","navigate","loginButtonText","renderEmptyState","emptyContainer","emptyTitle","emptyText","findPostsButton","findPostsButtonText","renderConversationItem","_ref6","_item$lastMessage","_item$lastMessage$sen","_item$lastMessage2","_item$lastMessage3","_item$user","_item$user2","_item$lastMessage4","_item$post","item","isUnread","isSenderMe","messagePreview","conversationItem","unreadItem","avatarContainer","source","uri","avatar","avatarPlaceholder","conversationContent","conversationHeader","userName","unreadText","timestamp","toLocaleDateString","postTitle","numberOfLines","unreadBadge","unreadBadgeText","renderComposeModal","visible","transparent","animationType","onRequestClose","contentContainerStyle","modalOverlay","keyboardShouldPersistTaps","composeModalContent","composeModalHeader","composeModalTitle","composeModalBody","postInfo","postInfoLabel","postInfoTitle","composeInput","placeholder","value","onChangeText","multiline","textAlignVertical","sendButton","sendButtonDisabled","disabled","sendButtonText","loadingContainer","loadingText","container","header","keyExtractor","renderItem","onRefresh","ListEmptyComponent","flex","resetButton","resetButtonText","create","backgroundColor","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","borderBottomWidth","borderBottomColor","headerTitle","fontSize","fontWeight","marginTop","padding","marginRight","width","height","borderRadius","marginBottom","marginLeft","alignSelf","textAlign","lineHeight","trialButton","trialButtonText","upgradeButton","borderWidth","borderColor","upgradeButtonText","newChatButton","position","right","bottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","newChatButtonText","trialModalContent","maxWidth","overflow","trialModalHeader","trialModalTitle","trialModalBody","trialIcon","trialTitle","trialDescription","benefitsContainer","benefitRow","benefitText","phoneInputContainer","phoneLabel","phoneInputWrapper","phoneIcon","phoneInput","errorText","startTrialButton","startTrialButtonText","termsText","statusBadge","statusText","borderLeftWidth","borderLeftColor","left"],"sources":["/Users/handy.hasan/Documents/SportsConnect/client/screens/ChatListScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  TouchableOpacity,\n  ActivityIndicator,\n  Alert,\n  Image,\n  Modal,\n  TextInput\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AuthContext } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_URL } from '../config';\nimport { getConversationsList, sendDirectMessage, getMessages } from '../services/api';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst ChatListScreen = ({ navigation, route }) => {\n  const { userInfo, requireLogin } = useContext(AuthContext);\n  const [conversations, setConversations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [showTrialModal, setShowTrialModal] = useState(false);\n  const [phone, setPhone] = useState(userInfo?.phone || '');\n  const [phoneError, setPhoneError] = useState('');\n  const [isStartingTrial, setIsStartingTrial] = useState(false);\n  const [trialError, setTrialError] = useState('');\n  const requestedTrialRef = useRef(false);\n  const [showComposeModal, setShowComposeModal] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      if (userInfo) {\n        fetchConversations();\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation, route]);\n\n  // New effect to handle selected user and post for new conversation\n  useEffect(() => {\n    if (route.params?.selectedUser && route.params?.selectedPost && route.params?.showComposeMessage) {\n      // Directly show compose modal - no premium check\n      setSelectedUser(route.params.selectedUser);\n      setSelectedPost(route.params.selectedPost);\n      setShowComposeModal(true);\n    }\n  }, [route.params?.selectedUser, route.params?.selectedPost, route.params?.showComposeMessage]);\n\n  useEffect(() => {\n    if (userInfo) {\n      fetchConversations();\n    }\n  }, [userInfo]);\n\n  const checkAccess = () => {\n    // Just check if user is logged in\n    return !!userInfo;\n  };\n\n  const fetchConversations = async () => {\n    try {\n      setLoading(true);\n      \n      // Try to use the real API endpoint first\n      try {\n        console.log('Attempting to fetch conversations from API...');\n        const apiConversations = await getConversationsList();\n        \n        if (apiConversations && apiConversations.length > 0) {\n          console.log('Successfully fetched conversations from API');\n          \n          // Format the conversations to match our UI structure\n          const formattedConversations = apiConversations.map(message => {\n            // Determine if the current user is the sender or recipient\n            const otherParty = message.sender._id === userInfo._id ? \n              message.receiver : message.sender;\n              \n            return {\n              _id: `${otherParty._id}_${message.post._id}`,\n              user: otherParty,\n              post: message.post,\n              lastMessage: message,\n              messages: [message], // We'll get more messages when user opens the conversation\n              unreadCount: message.receiver._id === userInfo._id && !message.isRead ? 1 : 0\n            };\n          });\n          \n          // Sort by most recent message\n          formattedConversations.sort((a, b) => \n            new Date(b.lastMessage?.createdAt) - new Date(a.lastMessage?.createdAt)\n          );\n          \n          setConversations(formattedConversations);\n          setLoading(false);\n          setRefreshing(false);\n          return;\n        }\n      } catch (apiError) {\n        console.log('Error fetching from API, falling back to local storage:', apiError);\n      }\n      \n      // If the API call fails, fall back to AsyncStorage\n      // This is a fallback for demonstration when not connected to backend\n      const savedConversations = await AsyncStorage.getItem('demo_conversations');\n      \n      if (savedConversations) {\n        const parsedConversations = JSON.parse(savedConversations);\n        if (parsedConversations && parsedConversations.length > 0) {\n          setConversations(parsedConversations);\n          setLoading(false);\n          setRefreshing(false);\n          return;\n        }\n      }\n      \n      // Create demo conversation if nothing found\n      const demoConversations = [\n        {\n          _id: 'demo1',\n          user: { \n            _id: 'user1', \n            name: 'John Doe',\n            profileImage: 'https://randomuser.me/api/portraits/men/32.jpg'\n          },\n          lastMessage: {\n            content: 'This is a demo conversation.',\n            createdAt: new Date(),\n            sender: { _id: 'user1', name: 'John Doe' },\n            recipient: { _id: userInfo._id, name: userInfo.name }\n          },\n          post: {\n            _id: 'post1',\n            title: 'Basketball game this weekend'\n          },\n          unreadCount: 1,\n          messages: [\n            {\n              _id: `msg_${Date.now()}`,\n              content: 'This is a demo conversation.',\n              createdAt: new Date(),\n              sender: { _id: 'user1', name: 'John Doe' },\n              recipient: { _id: userInfo._id, name: userInfo.name },\n              post: {\n                _id: 'post1',\n                title: 'Basketball game this weekend'\n              }\n            }\n          ]\n        }\n      ];\n      \n      setConversations(demoConversations);\n      await AsyncStorage.setItem('demo_conversations', JSON.stringify(demoConversations));\n      \n    } catch (error) {\n      console.log('Error fetching conversations:', error);\n      Alert.alert('Error', 'Failed to load conversations. Please try again later.');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    setRefreshing(true);\n    fetchConversations();\n  };\n\n  const goToChat = async (conversation) => {\n    // Set up the conversation for viewing/replying\n    setSelectedUser(conversation.user);\n    setSelectedPost(conversation.post);\n    setNewMessage(''); // Clear any previous message\n    \n    try {\n      // Try to fetch messages from API first\n      let messageHistory = '';\n      \n      try {\n        console.log('Fetching messages for conversation with:', conversation.user._id);\n        const response = await getMessages(conversation.user._id);\n        \n        if (response.success && response.data && response.data.length > 0) {\n          // Update conversation with full message history\n          const existingConvIndex = conversations.findIndex(c => \n            c._id === conversation._id\n          );\n          \n          if (existingConvIndex !== -1) {\n            const updatedConversations = [...conversations];\n            updatedConversations[existingConvIndex].messages = response.data;\n            setConversations(updatedConversations);\n          }\n          \n          // Format message history for display\n          messageHistory = response.data\n            .slice(0, 5) // Show only the 5 most recent messages\n            .map(msg => {\n              const sender = msg.sender._id === userInfo._id ? 'You' : msg.sender.name || 'User';\n              return `${sender}: ${msg.content}`;\n            })\n            .join('\\n\\n');\n        }\n      } catch (apiError) {\n        console.log('Error fetching messages from API:', apiError);\n        \n        // Fall back to local messages if API fails\n        if (conversation.messages && conversation.messages.length > 0) {\n          messageHistory = conversation.messages\n            .slice(0, 5)\n            .map(msg => {\n              const sender = msg.sender._id === userInfo._id ? 'You' : msg.sender.name || 'User';\n              return `${sender}: ${msg.content}`;\n            })\n            .join('\\n\\n');\n        } else {\n          messageHistory = 'No message history available.';\n        }\n      }\n      \n      // Create a modal to show the conversation history\n      Alert.alert(\n        `Conversation with ${conversation.user.name}`,\n        `About: ${conversation.post.title}`,\n        [\n          {\n            text: 'View Messages',\n            onPress: () => {\n              Alert.alert(\n                'Message History',\n                messageHistory || 'No message history available.',\n                [\n                  {\n                    text: 'Reply',\n                    onPress: () => setShowComposeModal(true)\n                  },\n                  {\n                    text: 'Close',\n                    style: 'cancel'\n                  }\n                ]\n              );\n            }\n          },\n          {\n            text: 'Send Message',\n            onPress: () => setShowComposeModal(true)\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel'\n          }\n        ]\n      );\n    } catch (error) {\n      console.log('Error in goToChat:', error);\n      \n      // Fall back to basic chat screen\n      Alert.alert(\n        `Conversation with ${conversation.user.name}`,\n        `About: ${conversation.post.title}`,\n        [\n          {\n            text: 'Send Message',\n            onPress: () => setShowComposeModal(true)\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel'\n          }\n        ]\n      );\n    }\n  };\n\n  const handleSendNewMessage = async () => {\n    if (!newMessage.trim() || !selectedUser || !selectedPost) {\n      return;\n    }\n\n    try {\n      // First try to send via API\n      const messageData = {\n        recipient: selectedUser._id,\n        content: newMessage.trim(),\n        post: selectedPost._id\n      };\n      \n      console.log('Sending message via API:', messageData);\n      \n      let response;\n      try {\n        response = await sendDirectMessage(messageData);\n        console.log('API response:', response);\n      } catch (apiError) {\n        console.log('Error sending via API, using local fallback:', apiError);\n        \n        // Create a local message object as fallback\n        response = {\n          _id: `local_msg_${Date.now()}`,\n          content: newMessage.trim(),\n          createdAt: new Date().toISOString(),\n          sender: { \n            _id: userInfo._id, \n            name: userInfo.name,\n            email: userInfo.email \n          },\n          receiver: selectedUser,\n          post: selectedPost\n        };\n        \n        // Save to local storage as fallback\n        const savedConversations = await AsyncStorage.getItem('demo_conversations');\n        let localConversations = savedConversations ? JSON.parse(savedConversations) : [];\n        \n        // Find existing conversation or create new one\n        const conversationId = `${selectedUser._id}_${selectedPost._id}`;\n        const existingConvIndex = localConversations.findIndex(c => \n          c.user._id === selectedUser._id && c.post._id === selectedPost._id\n        );\n        \n        if (existingConvIndex !== -1) {\n          // Update existing conversation\n          localConversations[existingConvIndex].lastMessage = response;\n          localConversations[existingConvIndex].messages.unshift(response);\n        } else {\n          // Create new conversation\n          const newConversation = {\n            _id: conversationId,\n            user: selectedUser,\n            lastMessage: response,\n            messages: [response],\n            post: selectedPost,\n            unreadCount: 0\n          };\n          localConversations.unshift(newConversation);\n        }\n        \n        await AsyncStorage.setItem('demo_conversations', JSON.stringify(localConversations));\n      }\n      \n      // Update UI regardless of source (API or local)\n      // Find existing conversation or create new one\n      const conversationId = `${selectedUser._id}_${selectedPost._id}`;\n      const existingConvIndex = conversations.findIndex(c => \n        c.user._id === selectedUser._id && c.post._id === selectedPost._id\n      );\n      \n      let updatedConversations = [...conversations];\n      \n      if (existingConvIndex !== -1) {\n        // Update existing conversation\n        updatedConversations[existingConvIndex] = {\n          ...updatedConversations[existingConvIndex],\n          lastMessage: response,\n          messages: [\n            response,\n            ...(updatedConversations[existingConvIndex].messages || [])\n          ]\n        };\n      } else {\n        // Create new conversation\n        const newConversation = {\n          _id: conversationId,\n          user: selectedUser,\n          lastMessage: response,\n          messages: [response],\n          post: selectedPost,\n          unreadCount: 0\n        };\n        updatedConversations = [newConversation, ...updatedConversations];\n      }\n      \n      setConversations(updatedConversations);\n      \n      // Clear the form and close the modal\n      setNewMessage('');\n      setShowComposeModal(false);\n      \n      // Show confirmation alert\n      Alert.alert(\n        'Message Sent',\n        `Your message to ${selectedUser.name} has been sent.`,\n        [{ text: 'OK' }]\n      );\n    } catch (error) {\n      console.log('Error saving message:', error);\n      Alert.alert('Error', 'Failed to send message. Please try again.');\n    }\n  };\n\n  // Update the reset function to clear data\n  const resetMessages = async () => {\n    try {\n      // For demo purposes only - clear local storage\n      await AsyncStorage.removeItem('demo_conversations');\n      \n      Alert.alert(\n        'Messages Reset',\n        'Local message cache has been cleared. Messages from the server may still exist. Pull down to refresh and see the changes.',\n        [{ text: 'OK', onPress: () => fetchConversations() }]\n      );\n    } catch (error) {\n      console.log('Error resetting messages:', error);\n      Alert.alert('Error', 'Failed to reset messages.');\n    }\n  };\n\n  // Not logged in view\n  if (!userInfo) {\n    return (\n      <View style={styles.centeredContainer}>\n        <Ionicons name=\"chatbubbles-outline\" size={70} color=\"#0066CC\" />\n        <Text style={styles.noticeTitle}>Login Required</Text>\n        <Text style={styles.noticeText}>\n          Please log in to access your conversations\n        </Text>\n        <TouchableOpacity\n          style={styles.loginButton}\n          onPress={() => navigation.navigate('Login')}\n        >\n          <Text style={styles.loginButtonText}>Login</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  // Show empty state when there are no conversations\n  const renderEmptyState = () => {\n    return (\n      <View style={styles.emptyContainer}>\n        <Ionicons name=\"chatbubbles-outline\" size={70} color=\"#ccc\" />\n        <Text style={styles.emptyTitle}>No Conversations Yet</Text>\n        <Text style={styles.emptyText}>\n          You don't have any messages yet. Find a post you're interested in and start a conversation!\n        </Text>\n        <TouchableOpacity\n          style={styles.findPostsButton}\n          onPress={() => navigation.navigate('Home')}\n        >\n          <Text style={styles.findPostsButtonText}>Find Posts</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const renderConversationItem = ({ item }) => {\n    const isUnread = item.unreadCount > 0;\n    const isSenderMe = item.lastMessage?.sender?._id === userInfo?._id;\n    const messagePreview = isSenderMe \n      ? `You: ${item.lastMessage?.content}` \n      : item.lastMessage?.content;\n\n    return (\n      <TouchableOpacity\n        style={[styles.conversationItem, isUnread && styles.unreadItem]}\n        onPress={() => goToChat(item)}\n      >\n        <View style={styles.avatarContainer}>\n          {item.user?.profileImage ? (\n            <Image\n              source={{ uri: item.user.profileImage }}\n              style={styles.avatar}\n            />\n          ) : (\n            <View style={styles.avatarPlaceholder}>\n              <Ionicons name=\"person\" size={24} color=\"#ccc\" />\n            </View>\n          )}\n        </View>\n        \n        <View style={styles.conversationContent}>\n          <View style={styles.conversationHeader}>\n            <Text style={[styles.userName, isUnread && styles.unreadText]}>\n              {item.user?.name || 'Unknown User'}\n            </Text>\n            <Text style={styles.timestamp}>\n              {new Date(item.lastMessage?.createdAt).toLocaleDateString()}\n            </Text>\n          </View>\n          \n          <Text style={styles.postTitle} numberOfLines={1}>\n            Re: {item.post?.title || 'Unknown Post'}\n          </Text>\n          \n          <Text style={[styles.messagePreview, isUnread && styles.unreadText]} numberOfLines={1}>\n            {messagePreview || 'No messages yet'}\n          </Text>\n        </View>\n        \n        {isUnread && (\n          <View style={styles.unreadBadge}>\n            <Text style={styles.unreadBadgeText}>{item.unreadCount}</Text>\n          </View>\n        )}\n      </TouchableOpacity>\n    );\n  };\n\n  // Add this function to render the compose message modal\n  const renderComposeModal = () => (\n    <Modal\n      visible={showComposeModal}\n      transparent={true}\n      animationType=\"slide\"\n      onRequestClose={() => setShowComposeModal(false)}\n    >\n      <KeyboardAwareScrollView\n        contentContainerStyle={styles.modalOverlay}\n        keyboardShouldPersistTaps=\"handled\"\n      >\n        <View style={styles.composeModalContent}>\n          <View style={styles.composeModalHeader}>\n            <Text style={styles.composeModalTitle}>\n              Message to {selectedUser?.name}\n            </Text>\n            <TouchableOpacity onPress={() => setShowComposeModal(false)}>\n              <Ionicons name=\"close\" size={24} color=\"#333\" />\n            </TouchableOpacity>\n          </View>\n          \n          <View style={styles.composeModalBody}>\n            {selectedPost && (\n              <View style={styles.postInfo}>\n                <Text style={styles.postInfoLabel}>Regarding:</Text>\n                <Text style={styles.postInfoTitle}>{selectedPost.title}</Text>\n              </View>\n            )}\n            \n            <TextInput\n              style={styles.composeInput}\n              placeholder=\"Type your message here...\"\n              value={newMessage}\n              onChangeText={setNewMessage}\n              multiline\n              numberOfLines={4}\n              textAlignVertical=\"top\"\n            />\n            \n            <TouchableOpacity\n              style={[\n                styles.sendButton,\n                !newMessage.trim() && styles.sendButtonDisabled\n              ]}\n              onPress={handleSendNewMessage}\n              disabled={!newMessage.trim()}\n            >\n              <Text style={styles.sendButtonText}>Send Message</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </KeyboardAwareScrollView>\n    </Modal>\n  );\n\n  if (loading && !refreshing) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#0066CC\" />\n        <Text style={styles.loadingText}>Loading conversations...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {renderComposeModal()}\n      \n      <View style={styles.header}>\n        {/* Remove premium/trial indicator */}\n      </View>\n      \n      <FlatList\n        data={conversations}\n        keyExtractor={(item) => item._id}\n        renderItem={renderConversationItem}\n        onRefresh={handleRefresh}\n        refreshing={refreshing}\n        ListEmptyComponent={renderEmptyState}\n        contentContainerStyle={conversations.length === 0 ? { flex: 1 } : null}\n      />\n      \n      {/* Chat buttons - show for all logged in users */}\n      {/* <TouchableOpacity\n        style={styles.newChatButton}\n        onPress={() => navigation.navigate('Home')}\n      >\n        <Ionicons name=\"add\" size={24} color=\"white\" />\n        <Text style={styles.newChatButtonText}>Find Posts</Text>\n      </TouchableOpacity>\n       */}\n      {/* Add a reset button for testing */}\n      <TouchableOpacity\n        style={styles.resetButton}\n        onPress={() => {\n          Alert.alert(\n            'Reset Messages',\n            'This will clear all messages for all users. Are you sure?',\n            [\n              { text: 'Cancel', style: 'cancel' },\n              { text: 'Reset', onPress: resetMessages, style: 'destructive' }\n            ]\n          );\n        }}\n      >\n        <Ionicons name=\"trash\" size={20} color=\"white\" />\n        <Text style={styles.resetButtonText}>Reset Messages</Text>\n      </TouchableOpacity> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f8f8',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 12,\n    fontSize: 16,\n    color: '#666',\n  },\n  conversationItem: {\n    flexDirection: 'row',\n    padding: 16,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  unreadItem: {\n    backgroundColor: '#f0f7ff',\n  },\n  avatarContainer: {\n    marginRight: 12,\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n  },\n  avatarPlaceholder: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  conversationContent: {\n    flex: 1,\n  },\n  conversationHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 4,\n  },\n  userName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n  },\n  timestamp: {\n    fontSize: 12,\n    color: '#888',\n  },\n  postTitle: {\n    fontSize: 14,\n    color: '#0066CC',\n    marginBottom: 4,\n  },\n  messagePreview: {\n    fontSize: 14,\n    color: '#666',\n  },\n  unreadText: {\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  unreadBadge: {\n    backgroundColor: '#0066CC',\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 8,\n    alignSelf: 'center',\n  },\n  unreadBadgeText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  centeredContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  noticeTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 16,\n    marginBottom: 8,\n    color: '#333',\n  },\n  noticeText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 24,\n    color: '#666',\n    lineHeight: 22,\n  },\n  loginButton: {\n    backgroundColor: '#0066CC',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  trialButton: {\n    backgroundColor: '#0066CC',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginBottom: 12,\n    width: '80%',\n    alignItems: 'center',\n  },\n  trialButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  upgradeButton: {\n    borderWidth: 1,\n    borderColor: '#0066CC',\n    backgroundColor: 'transparent',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    width: '80%',\n    alignItems: 'center',\n  },\n  upgradeButtonText: {\n    color: '#0066CC',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  emptyTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 16,\n    marginBottom: 8,\n    color: '#333',\n  },\n  emptyText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 24,\n    color: '#666',\n    lineHeight: 22,\n  },\n  findPostsButton: {\n    backgroundColor: '#0066CC',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n  },\n  findPostsButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  newChatButton: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20,\n    backgroundColor: '#0066CC',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  newChatButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: 20,\n  },\n  trialModalContent: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    width: '85%',\n    maxWidth: 400,\n    overflow: 'hidden',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 4,\n  },\n  trialModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  trialModalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  trialModalBody: {\n    padding: 20,\n    alignItems: 'center',\n  },\n  trialIcon: {\n    marginBottom: 15,\n  },\n  trialTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 10,\n  },\n  trialDescription: {\n    fontSize: 16,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20,\n    lineHeight: 24,\n  },\n  benefitsContainer: {\n    marginBottom: 20,\n  },\n  benefitRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  benefitText: {\n    fontSize: 16,\n    color: '#333',\n    marginLeft: 8,\n  },\n  phoneInputContainer: {\n    width: '100%',\n    marginBottom: 20,\n  },\n  phoneLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: '#333',\n  },\n  phoneInputWrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n  },\n  phoneIcon: {\n    marginRight: 8,\n  },\n  phoneInput: {\n    flex: 1,\n    fontSize: 16,\n  },\n  errorText: {\n    color: 'red',\n    fontSize: 12,\n    marginTop: 5,\n  },\n  startTrialButton: {\n    backgroundColor: '#0066CC',\n    padding: 12,\n    borderRadius: 8,\n    flex: 1.5,\n    alignItems: 'center',\n  },\n  startTrialButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  termsText: {\n    fontSize: 12,\n    color: '#666',\n    textAlign: 'center',\n    marginTop: 10,\n  },\n  statusBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f0f0f0',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '600',\n    marginLeft: 4,\n  },\n  composeModalContent: {\n    backgroundColor: 'white',\n    borderRadius: 16,\n    width: '100%',\n    maxWidth: 400,\n    overflow: 'hidden',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 4,\n  },\n  composeModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  composeModalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  composeModalBody: {\n    padding: 20,\n  },\n  postInfo: {\n    marginBottom: 20,\n    width: '100%',\n    padding: 12,\n    backgroundColor: '#f8f8f8',\n    borderRadius: 8,\n    borderLeftWidth: 3,\n    borderLeftColor: '#0066CC',\n  },\n  postInfoLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 4,\n    color: '#666',\n  },\n  postInfoTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#0066CC',\n  },\n  composeInput: {\n    width: '100%',\n    height: 120,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    marginBottom: 20,\n    fontSize: 16,\n  },\n  sendButton: {\n    backgroundColor: '#0066CC',\n    padding: 12,\n    borderRadius: 8,\n    width: '100%',\n    alignItems: 'center',\n  },\n  sendButtonDisabled: {\n    backgroundColor: '#cccccc',\n  },\n  sendButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  resetButton: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    backgroundColor: '#FF3B30',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  resetButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n});\n\nexport default ChatListScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}